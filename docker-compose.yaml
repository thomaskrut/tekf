version: "3.4"

services:

  query-service:
    build:
      context: ./query/query
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:8081"
    container_name: query-service
    environment:
      EVENTSTORE_DB_URL: esdb://eventstore-db:2113?tls=false
      SERVER_PORT: 8081

  command-service:
    container_name: command-service
    build:
      context: ./command
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always

  booking-service:
    container_name: booking-service
    build:
      context: ./booking
      dockerfile: Dockerfile
    restart: always

  checkinout-service:
    container_name: checkinout-service
    build:
      context: ./checkinout
      dockerfile: Dockerfile
    restart: always

  eventstore-service:
    container_name: eventstore-service
    build:
      context: ./eventstore
      dockerfile: Dockerfile
    ports:
      - "9090"
    restart: always

  nats:
    image: nats:latest
    container_name: nats-service
    ports:
      - "4222"
      - "6222"
      - "8222"

  eventstore.db:
    image: eventstore/eventstore:23.10.0-bookworm-slim
    container_name: eventstore-db-service
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
